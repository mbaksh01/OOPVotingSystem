@page "/login"

@if (!_signingUp)
{
    <h1>Sign In</h1>

    <Paragraph>
        Don't have an account? Click <Anchor Clicked="DisplaySignUp">here</Anchor> to register.
    </Paragraph>

    <hr />

    @if (_justSignedUp)
    {
        <Paragraph>
            You have successfully registered your account.
            Login with the credentials you just used to sign up.
        </Paragraph>
    }

    <Validations>
        <Validation Validator="ValidationRule.IsNotEmpty">
            <Field Horizontal>
            <FieldLabel ColumnSize="ColumnSize.Is1">Username</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.Is3">
                <TextEdit @bind-Text="_user.Username" Placeholder="Username"></TextEdit>
            </FieldBody>
        </Field>
    </Validation>
    <Validation Validator="ValidationRule.IsAlphanumericWithUnderscore">
        <Field Horizontal>
            <FieldLabel ColumnSize="ColumnSize.Is1">Password</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.Is3">
                <TextEdit @bind-Text="_user.Password"
                          @onkeyup="OnEnterLogin"
                          Role="TextRole.Password"
                          Placeholder="Password" />
            </FieldBody>
        </Field>
    </Validation>
    <Button Clicked="SignIn"
            Border="Border.Is1.Rounded"
            Margin="Margin.Is2.OnY"
            Background="Background.Primary"
            TextColor="TextColor.White">
        Sign In
    </Button>
    <FieldBody>
        @if (_errorMessage is not null)
            {
                <Paragraph>@_errorMessage</Paragraph>
            }
        </FieldBody>
    </Validations>
}
else
{
    <h1>Sign Up</h1>

    <Paragraph>
        Already have an account? Click <Anchor Clicked="DisplaySignIn">here</Anchor> to sign in.
    </Paragraph>

    <hr />

    <h2>Personal Details</h2>

    <Validations>
        <Validation Validator="ValidationRule.IsNotEmpty">
            <Field Horizontal>
                <FieldLabel ColumnSize="ColumnSize.Is2">Name</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is4">
                    <TextEdit @bind-Text="_user.Person.Name" Placeholder="Full Name"></TextEdit>
                </FieldBody>
            </Field>
        </Validation>
        <Validation UsePattern>
            <Field Horizontal>
                <FieldLabel ColumnSize="ColumnSize.Is2">Phone Number</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is4">
                    <TextEdit Pattern="[0-9]*"
                              Role="TextRole.Telephone"
                              @bind-Text="_user.Person.PhoneNumber"
                              Placeholder="Phone number" />
                </FieldBody>
            </Field>
        </Validation>
        <Validation Validator="ValidationRule.IsEmail">
            <Field Horizontal>
                <FieldLabel ColumnSize="ColumnSize.Is2">Email</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is4">
                    <TextEdit Role="TextRole.Email" @bind-Text="_user.Person.Email" Placeholder="Email"></TextEdit>
                </FieldBody>
            </Field>
        </Validation>
        <Validation Validator="ValidationRule.IsAlphanumeric">
            <Field Horizontal>
                <FieldLabel ColumnSize="ColumnSize.Is2">Unique Person Identifier</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is4">
                    <TextEdit @bind-Text="_user.Person.UniquePersonIdentifier"
                              Placeholder="UNI" />
                </FieldBody>
            </Field>
        </Validation>
        <Field Horizontal>
            <FieldLabel ColumnSize="ColumnSize.Is2" Padding="Padding.Is3.FromEnd"></FieldLabel>
            <FieldBody ColumnSize="ColumnSize.Is4" Display="Display.Flex" Flex="Flex.AlignItems.Center">
                <Check TValue="bool" @bind-Checked="_user.Person.AcceptedTerms">
                    I have read and accepted the terms and conditions.
                </Check>
            </FieldBody>
        </Field>
    </Validations>

    <h2>Address</h2>

    <Validations>
        <AddressEntry Address="_user.Person.Address" />
    </Validations>

    <h2>Sign In Details</h2>

    <Validations>
        <Validation AsyncValidator="CheckIfUsernameExists">
            <Field Horizontal>
                <FieldLabel ColumnSize="ColumnSize.Is2">Username</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is4">
                    <TextEdit @bind-Text="_user.Username" Placeholder="Username">
                        <Feedback>
                            <ValidationError></ValidationError>
                        </Feedback>
                    </TextEdit>
                </FieldBody>
            </Field>
        </Validation>
        <Validation Validator="ValidationRule.IsAlphanumericWithUnderscore">
            <Field Horizontal>
                <FieldLabel ColumnSize="ColumnSize.Is2">Password</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is4">
                    <TextEdit Role="TextRole.Password" @bind-Text="_user.Password" Placeholder="Password"></TextEdit>
                </FieldBody>
            </Field>
        </Validation>
        <Button Clicked="Register"
                Border="Border.Is1.Rounded"
                Margin="Margin.Is2.OnY"
                Background="Background.Primary"
                TextColor="TextColor.White">
            Register
        </Button>
    </Validations>

    @if (_errorMessage is not null)
    {
        <Paragraph>@_errorMessage</Paragraph>
    }
}
